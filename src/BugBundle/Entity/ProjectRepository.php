<?php

namespace BugBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Doctrine\ORM\QueryBuilder;

/**
 * ProjectRepository
 * @SuppressWarnings(PHPMD.BooleanArgumentFlag)
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends EntityRepository
{
    /**
     * @param User $user
     * @param bool|false $count
     * @return Query
     */
    public function getProjectsByUserQuery(User $user, $count = false)
    {

        return $this->getProjectsByUserQueryBuilder($user, $count)->getQuery();
    }

    /**
     * @param User $user
     * @param bool|false $count
     * @return QueryBuilder
     */
    public function getProjectsByUserQueryBuilder(User $user, $count = false)
    {
        $qb = $this->createQueryBuilder('p');
        if ($count) {
            $qb->select('count(p.id)');
        }
        $qb->leftJoin('p.members', 'members');
        $qb->where(
            $qb->expr()->in('members', ':user')
        )
            ->setParameter('user', $user);

        return $qb;
    }

    /**
     * @param User $user
     * @param Project $project
     * @return integer
     */
    public function checkAccessProject(User $user, Project $project)
    {
        return $this->getProjectsByUserQueryBuilder($user, true)
            ->andWhere('p = :project')
            ->setParameter('project', $project)
            ->getQuery()->getSingleScalarResult();

    }


    public function getAllProjectsQuery()
    {
        return $this->getEntityManager()->createQuery("SELECT p FROM BugBundle:project p");
    }

    /**
     * @param User $user
     * @return array
     */
    public function getProjectsByUser(User $user)
    {
        return $this->getProjectsByUserQuery($user)->getResult();
    }

    /**
     * @param User $user
     * @return integer
     */
    public function countProjectsByUser(User $user)
    {
        return $this->getProjectsByUserQuery($user, true)->getSingleScalarResult();
    }
}
